<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pan.dao.StudentMapper">
    <resultMap id="BaseResultMap" type="com.pan.bean.Student">
        <id column="stu_id" jdbcType="INTEGER" property="stuId"/>
        <result column="stu_name" jdbcType="VARCHAR" property="stuName"/>
        <result column="stu_sex" jdbcType="CHAR" property="stuSex"/>
        <result column="stu_age" jdbcType="INTEGER" property="stuAge"/>
        <result column="stu_major" jdbcType="VARCHAR" property="stuMajor"/>
        <result column="stu_class" jdbcType="INTEGER" property="stuClass"/>
        <result column="stu_pwd" jdbcType="VARCHAR" property="stuPwd"/>
    </resultMap>

    <resultMap id="WithGradeResultMap" type="com.pan.bean.Student">
        <id column="stu_id" jdbcType="INTEGER" property="stuId"/>
        <result column="stu_name" jdbcType="VARCHAR" property="stuName"/>
        <result column="stu_sex" jdbcType="CHAR" property="stuSex"/>
        <result column="stu_age" jdbcType="INTEGER" property="stuAge"/>
        <result column="stu_major" jdbcType="VARCHAR" property="stuMajor"/>
        <result column="stu_class" jdbcType="INTEGER" property="stuClass"/>
        <result column="stu_pwd" jdbcType="VARCHAR" property="stuPwd"/>
        <collection property="grades" javaType="java.util.List" ofType="com.pan.bean.Grade">
            <result column="s_id" jdbcType="INTEGER" property="sId"/>
            <result column="java" jdbcType="INTEGER" property="java"/>
            <result column="c" jdbcType="INTEGER" property="c"/>
            <result column="cpp" jdbcType="INTEGER" property="cpp"/>
        </collection>
    </resultMap>

    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        stu_id
        , stu_name, stu_sex, stu_age, stu_major, stu_class, stu_pwd
    </sql>

    <sql id="With_Grade_Column_List">
        stu_id
        , stu_name, stu_sex, stu_age, stu_pwd, stu_major, stu_class, stu_pwd, s_id, java, c, cpp
    </sql>

    <select id="selectByExample" parameterType="com.pan.bean.StudentExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from tbl_stu
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectByExampleWithGrade" parameterType="com.pan.bean.StudentExample" resultMap="WithGradeResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="With_Grade_Column_List"/>
        from tbl_stu s left join tbl_grd g
        on s.stu_id = g.s_id
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectByPrimaryKeyWithGrade" parameterType="java.lang.Integer" resultMap="WithGradeResultMap">
        select
        <include refid="With_Grade_Column_List"/>
        from tbl_stu s left join tbl_grd g
        on s.stu_id = g.s_id
        where stu_id = #{stuId,jdbcType=INTEGER}
    </select>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tbl_stu
        where stu_id = #{stuId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from tbl_stu
        where stu_id = #{stuId,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.pan.bean.StudentExample">
        delete from tbl_stu
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.pan.bean.Student">
        insert into tbl_stu (stu_id, stu_name, stu_sex,
                             stu_age, stu_major, stu_class,
                             stu_pwd)
        values (#{stuId,jdbcType=INTEGER}, #{stuName,jdbcType=VARCHAR}, #{stuSex,jdbcType=CHAR},
                #{stuAge,jdbcType=INTEGER}, #{stuMajor,jdbcType=VARCHAR}, #{stuClass,jdbcType=INTEGER},
                #{stuPwd,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.pan.bean.Student">
        insert into tbl_stu
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="stuId != null">
                stu_id,
            </if>
            <if test="stuName != null">
                stu_name,
            </if>
            <if test="stuSex != null">
                stu_sex,
            </if>
            <if test="stuAge != null">
                stu_age,
            </if>
            <if test="stuMajor != null">
                stu_major,
            </if>
            <if test="stuClass != null">
                stu_class,
            </if>
            <if test="stuPwd != null">
                stu_pwd,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="stuId != null">
                #{stuId,jdbcType=INTEGER},
            </if>
            <if test="stuName != null">
                #{stuName,jdbcType=VARCHAR},
            </if>
            <if test="stuSex != null">
                #{stuSex,jdbcType=CHAR},
            </if>
            <if test="stuAge != null">
                #{stuAge,jdbcType=INTEGER},
            </if>
            <if test="stuMajor != null">
                #{stuMajor,jdbcType=VARCHAR},
            </if>
            <if test="stuClass != null">
                #{stuClass,jdbcType=INTEGER},
            </if>
            <if test="stuPwd != null">
                #{stuPwd,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.pan.bean.StudentExample" resultType="java.lang.Long">
        select count(*) from tbl_stu
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update tbl_stu
        <set>
            <if test="record.stuId != null">
                stu_id = #{record.stuId,jdbcType=INTEGER},
            </if>
            <if test="record.stuName != null">
                stu_name = #{record.stuName,jdbcType=VARCHAR},
            </if>
            <if test="record.stuSex != null">
                stu_sex = #{record.stuSex,jdbcType=CHAR},
            </if>
            <if test="record.stuAge != null">
                stu_age = #{record.stuAge,jdbcType=INTEGER},
            </if>
            <if test="record.stuMajor != null">
                stu_major = #{record.stuMajor,jdbcType=VARCHAR},
            </if>
            <if test="record.stuClass != null">
                stu_class = #{record.stuClass,jdbcType=INTEGER},
            </if>
            <if test="record.stuPwd != null">
                stu_pwd = #{record.stuPwd,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update tbl_stu
        set stu_id = #{record.stuId,jdbcType=INTEGER},
        stu_name = #{record.stuName,jdbcType=VARCHAR},
        stu_sex = #{record.stuSex,jdbcType=CHAR},
        stu_age = #{record.stuAge,jdbcType=INTEGER},
        stu_major = #{record.stuMajor,jdbcType=VARCHAR},
        stu_class = #{record.stuClass,jdbcType=INTEGER},
        stu_pwd = #{record.stuPwd,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.pan.bean.Student">
        update tbl_stu
        <set>
            <if test="stuName != null">
                stu_name = #{stuName,jdbcType=VARCHAR},
            </if>
            <if test="stuSex != null">
                stu_sex = #{stuSex,jdbcType=CHAR},
            </if>
            <if test="stuAge != null">
                stu_age = #{stuAge,jdbcType=INTEGER},
            </if>
            <if test="stuMajor != null">
                stu_major = #{stuMajor,jdbcType=VARCHAR},
            </if>
            <if test="stuClass != null">
                stu_class = #{stuClass,jdbcType=INTEGER},
            </if>
            <if test="stuPwd != null">
                stu_pwd = #{stuPwd,jdbcType=VARCHAR},
            </if>
        </set>
        where stu_id = #{stuId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.pan.bean.Student">
        update tbl_stu
        set stu_name  = #{stuName,jdbcType=VARCHAR},
            stu_sex   = #{stuSex,jdbcType=CHAR},
            stu_age   = #{stuAge,jdbcType=INTEGER},
            stu_major = #{stuMajor,jdbcType=VARCHAR},
            stu_class = #{stuClass,jdbcType=INTEGER},
            stu_pwd   = #{stuPwd,jdbcType=VARCHAR}
        where stu_id = #{stuId,jdbcType=INTEGER}
    </update>
</mapper>